<?xml version="1.0" encoding="UTF-8"?>
<!-- log4j2使用说明：
使用方式如下：
private static final Logger logger = LogManager.getLogger(实际类名.class.getName());

2、日志说明：
（1）请根据实际情况配置各项参数
（2）需要注意日志文件备份数和日志文件大小，注意预留目录空间
（3）实际部署的时候backupFilePatch变量需要修改成linux目录
 -->
<!-- Log4j 2.x 配置文件。每30秒自动检查和应用配置文件的更新； -->
<Configuration status="warn" monitorInterval="30" strict="true" schema="Log4J-V2.2.xsd">
    <Appenders>
        <!-- 输出到控制台 -->
        <Console name="Console" target="SYSTEM_OUT">
            <!-- 需要记录的级别 -->
            <!-- <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" /> -->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n" />
        </Console>

        <!-- 输出到文件，按天或者超过80MB分割 -->
        <RollingFile name="RollingFile" fileName="../logs/logger-x.log"  filePattern="../logs/$${date:yyyy-MM}/xjj-%d{yyyy-MM-dd}-%i.log.gz">
            <!-- 需要记录的级别 -->
            <!-- <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" /> -->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n" />
            <Policies>
                <OnStartupTriggeringPolicy />
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="80 MB" />
            </Policies>
        </RollingFile>
    </Appenders>
    <Loggers>
        <Root level="debug"> <!-- 全局配置 -->
            <AppenderRef ref="Console" />
            <AppenderRef ref="RollingFile"/>
        </Root>
        <!-- 为sql语句配置特殊的Log级别，方便调试 -->
<!--        <Logger name="com.sekift" level="${log.sql.level}" additivity="false">
            <AppenderRef ref="Console" />
        </Logger>-->
    </Loggers>
</Configuration>